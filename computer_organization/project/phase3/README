DESCRIPTION

This program is simulating a MIPS architecture, it uses a cache that can be configured in a number
of different ways: the set associativity can be changed, either a shared or a split cache
can be used, and the block size can be changed. For more detailed information, look at the
documentation for the edumips64 project (https://www.edumips.org/).

REQUIREMENTS

If you can compile and run the baseline simulator with bazel 
(https://github.com/lupino3/edumips64/blob/master/docs/developer-guide.md), there should be no problems.


BUILDING AND EXECUTING THE PROGRAM

First, make sure you are executing the following commands in the ./edumips64 directory.

Then, build the jar file:
bazel build --java_toolchain=@bazel_tools//tools/jdk:toolchain_hostjdk8 --workspace_status_command=utils/bazel-stamp.sh --stamp //src/main/java/org/edumips64:standalone-jar

Then, run the jar file:
java -jar bazel-genfiles/src/main/java/org/edumips64/edumips64-1.2.5.jar

Then, load a program from the menu in the simulator and run it. The benchmark programs are in the folder 
named "phase3-Benchmark".


CONFIGURATIONS

The settings of the cache can be changed on lines 60-62 in ./edumips64/src/main/java/org/edumips64/utils/ConfigStore.java.
The lines that can be changed look like this:

ConfigStore.defaults.put(ConfigKey.SET_ASSOCIATIVITY, 16);
ConfigStore.defaults.put(ConfigKey.BLOCK_SIZE, 256);
ConfigStore.defaults.put(ConfigKey.SPLIT_CACHE, true);

The number in the first line determines the set associativity, and it can be set to 1,2,4,8 or 16.
The number in the second line determines the block size, and it can be set to 16,32,64,128, or 256.
The boolean in the third line determines whether a split or shared cache should be used. It can be
set to true for a split cache and false for a shared cache.

CHANGELOG

To see which changes have been made to the baseline simulator, either type "git diff" in the ./edumips64 
directory or look at the file named changelog (./changelog).
