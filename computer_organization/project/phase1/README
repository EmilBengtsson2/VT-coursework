DESCRIPTION

This program is simulating a MIPS architecture, it can be configured to run both with or without 
forwarding, and with or without simultaneous reading and writing to the registers. For more detailed 
information, look at the documentation for the edumips64 project (https://www.edumips.org/).

REQUIREMENTS

If you can compile and run the baseline simulator with bazel 
(https://github.com/lupino3/edumips64/blob/master/docs/developer-guide.md), there should be no problems.


BUILDING AND EXECUTING THE PROGRAM

First, make sure you are executing the following commands in the ./edumips64 directory.

Then, build the jar file:
bazel build --workspace_status_command=utils/bazel-stamp.sh --stamp //src/main/java/org/edumips64:standalone-jar

Then, run the jar file:
java -jar bazel-genfiles/src/main/java/org/edumips64/edumips64-1.2.5.jar

Then, load a program from the menu in the simulator and run it. The benchmark programs are in the folder 
named "phase1-Benchmark".


CONFIGURATIONS

The option to disable simultaneous reading and writing to the registers has not been added to the UI. 
Instead a line must be changed in ./edumips64/src/main/java/org/edumips64/utils/ConfigStore.java. The line 
that should be changed looks like this:

ConfigStore.defaults.put(ConfigKey.SIMULTANEOUS_READING_AND_WRITING, false);

If the "false" is changed to "true" like it is below, simultaneous reading and writing to registers will 
be disabled.

ConfigStore.defaults.put(ConfigKey.SIMULTANEOUS_READING_AND_WRITING, true);


CHANGELOG

To see which changes have been made to the baseline simulator, either type "git diff" in the ./edumips64 
directory or look at the file named changelog (./changelog).
